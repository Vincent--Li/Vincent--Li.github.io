<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>监控工具 on</title><link>/tags/%E7%9B%91%E6%8E%A7%E5%B7%A5%E5%85%B7/</link><description>Recent content in 监控工具 on</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sat, 13 Jul 2019 20:59:16 +0000</lastBuildDate><atom:link href="/tags/%E7%9B%91%E6%8E%A7%E5%B7%A5%E5%85%B7/index.xml" rel="self" type="application/rss+xml"/><item><title>JVM性能监控工具</title><link>/posts/java/jvm_performance_monitor/</link><pubDate>Sat, 13 Jul 2019 20:59:16 +0000</pubDate><guid>/posts/java/jvm_performance_monitor/</guid><description>系统性能监控 # uptime 系统时间 运行时间 连接数: 每个终端算一个连接数 1/5/15分钟系统平均负载 top 第一行同uptime cpu内存 每个进程占CPU的情况 vmstat 可以统计系统的CPU, 内存, swap, io等情况 CPU占用率很高, 上下文切换频繁, 说明系统有线程正在频繁切换 pidstat 细致观察进程 需要安装 监控CPU 监控IO 监控内存 Java自带工具 # jdk安装目录下的tools目录下.
jps # 列出java进程, 类似ps命令 -q指定jps只输出进程ID, 不输出类的短名称 -m输出传递给Java进程(主函数)的参数 -l可以用于输出主函数的完整路径 -v可以显式传递给JVM的参数 jinfo # 可以用来查看正在运行的Java应用程序的扩展参数, 甚至支持在运行时,修改部分参数 -flag &amp;lt;name&amp;gt; : 打印指定的JVM的参数值 -flag [+|-] &amp;lt;name&amp;gt;: 指定JVM参数的布尔值 -flag &amp;lt;name&amp;gt;=&amp;lt;value&amp;gt;: 设置指定JVM参数的值 # 显示新生代对象晋升到老年代对象的最大年龄 jinfo -flag MaxTenuringThreshold 2972 -XX:MaxTenuringThreshold=15 # 显示是否打印GC详细信息 jinfo -flag PrintGCDetails 2972 -XX:-PrintGCDetails # 运行时修改参数, 控制是否输出GC日志 jinof -flag PrintGCDetails 2972 -XX:-PrintGCDetails jinfo -flag +PrintGCDetails 2972 jinfo -flag PrintGCDetails 2972 -XX:+PrintGCDetails jmap # 生成Java应用程序的堆快照和对象的统计信息 jmap -histo 2972 &amp;gt;c:\s.</description></item></channel></rss>