<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>GC - Tag - Vincent is right here</title><link>https://vincent--li.github.io/tags/gc/</link><description>GC - Tag - Vincent is right here</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>q315744068@gmail.com (Vincent)</managingEditor><webMaster>q315744068@gmail.com (Vincent)</webMaster><lastBuildDate>Tue, 09 Jul 2019 21:38:20 +0000</lastBuildDate><atom:link href="https://vincent--li.github.io/tags/gc/" rel="self" type="application/rss+xml"/><item><title>Java GC参数</title><link>https://vincent--li.github.io/2019/7/9/java-gc%E5%8F%82%E6%95%B0/</link><pubDate>Tue, 09 Jul 2019 21:38:20 +0000</pubDate><author>Vincent</author><guid>https://vincent--li.github.io/2019/7/9/java-gc%E5%8F%82%E6%95%B0/</guid><description>堆回顾 串行收集器 最古老, 最稳定 效率高 可能会产生较长的停顿 -XX:+UseSerialGC 新生代,老年代使用串行回收 新生代复制算法 老年代标记-压缩 并行收集器 ParNew -XX:+UseParNewGC 新生代并行,</description></item><item><title>Java GC算法与种类</title><link>https://vincent--li.github.io/2019/7/9/java-gc%E7%AE%97%E6%B3%95%E4%B8%8E%E7%A7%8D%E7%B1%BB/</link><pubDate>Tue, 09 Jul 2019 19:58:30 +0000</pubDate><author>Vincent</author><guid>https://vincent--li.github.io/2019/7/9/java-gc%E7%AE%97%E6%B3%95%E4%B8%8E%E7%A7%8D%E7%B1%BB/</guid><description>GC的概念 java中,GC的对象是堆空间和永久区 GC算法 引用计数法 没有被java采用 通过引用计数来回收垃圾, 但是有问题: 引用和去引用伴随加法</description></item></channel></rss>