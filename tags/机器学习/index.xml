<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>机器学习 - Tag - Vincent is right here</title><link>https://vincent--li.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/</link><description>机器学习 - Tag - Vincent is right here</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>q315744068@gmail.com (Vincent)</managingEditor><webMaster>q315744068@gmail.com (Vincent)</webMaster><lastBuildDate>Sat, 08 Jun 2019 17:34:36 +0000</lastBuildDate><atom:link href="https://vincent--li.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/" rel="self" type="application/rss+xml"/><item><title>机器学习-视频学习系列15-隐马尔可夫模型</title><link>https://vincent--li.github.io/2019/6/8/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%9715-%E9%9A%90%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E6%A8%A1%E5%9E%8B/</link><pubDate>Sat, 08 Jun 2019 17:34:36 +0000</pubDate><author>Vincent</author><guid>https://vincent--li.github.io/2019/6/8/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%9715-%E9%9A%90%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E6%A8%A1%E5%9E%8B/</guid><description>问题模型 模型公式 目标: 求$P(x_t|y_{1:t})$ 步骤: predict 求$P(x_t|y_{1:t-1})$ 使用到恒等变形公式: $P(A|BC)$ $= \frac{P(ABC)}{P(BC)}$ $= \frac{P(B|AC)P(A|C)P(C)}{P(B|C)P(C)}$ $= \frac{P(B|AC)P(A|C)}{P(B|C)}$ update 求</description></item><item><title>机器学习-视频学习系列14-贝叶斯网络</title><link>https://vincent--li.github.io/2019/6/7/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%9714-%E8%B4%9D%E5%8F%B6%E6%96%AF%E7%BD%91%E7%BB%9C/</link><pubDate>Fri, 07 Jun 2019 23:33:54 +0000</pubDate><author>Vincent</author><guid>https://vincent--li.github.io/2019/6/7/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%9714-%E8%B4%9D%E5%8F%B6%E6%96%AF%E7%BD%91%E7%BB%9C/</guid><description>机器学习的四种paradigms 连接主义(connectionist) aka 深度学习,神经网络. 认为表示学习非常重要. 需要学出来一个分布式的表示</description></item><item><title>机器学习-视频学习系列12-聚类</title><link>https://vincent--li.github.io/2019/6/7/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%9712-%E8%81%9A%E7%B1%BB/</link><pubDate>Fri, 07 Jun 2019 16:02:35 +0000</pubDate><author>Vincent</author><guid>https://vincent--li.github.io/2019/6/7/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%9712-%E8%81%9A%E7%B1%BB/</guid><description>聚类 基于对象的聚类(Objective based clustering) K-means 聚类 k-means 问题描述: 找到cpt1,cpt2,&amp;hellip;.cpt, 使 $ min\sum_{i=1}^n m_{j \in 1 \cdots k} d^2(x^i,c_j) $ k-median 问题描述</description></item></channel></rss>