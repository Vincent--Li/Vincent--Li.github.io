<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>All Posts - Vincent is right here</title><link>https://vincent--li.github.io/posts/</link><description>All Posts | Vincent is right here</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>q315744068@gmail.com (Vincent)</managingEditor><webMaster>q315744068@gmail.com (Vincent)</webMaster><lastBuildDate>Mon, 26 Sep 2022 22:35:55 +0800</lastBuildDate><atom:link href="https://vincent--li.github.io/posts/" rel="self" type="application/rss+xml"/><item><title>CSAPP: Representing and Manipulating Information</title><link>https://vincent--li.github.io/2022/9/26/csapp-representing-and-manipulating-information/</link><pubDate>Mon, 26 Sep 2022 22:35:55 +0800</pubDate><author>Vincent</author><guid>https://vincent--li.github.io/2022/9/26/csapp-representing-and-manipulating-information/</guid><description>2.1 Information Storage</description></item><item><title>CSAPP: A Tour of Computer Systems</title><link>https://vincent--li.github.io/2022/9/22/csapp-a-tour-of-computer-systems/</link><pubDate>Thu, 22 Sep 2022 00:10:37 +0800</pubDate><author>Vincent</author><guid>https://vincent--li.github.io/2022/9/22/csapp-a-tour-of-computer-systems/</guid><description><![CDATA[1.1 Information is Bits + Contexts The same bits may have different meaning under different contexts 1 2 3 4 5 6 7 // hello.c #include &lt;stdio.h&gt; int main() { printf(&#34;hello, world\n&#34;); return 0; } 1.2 Programs Are Traslated by Other Programs into Different Forms The programs that perform four phases(preprocessor, compiler, assembler, and linker) are known colletively as the compilation system Preprocessing phase. The preprocessor(cpp) modifies the original C]]></description></item><item><title>CSAPP: Preface</title><link>https://vincent--li.github.io/2022/9/21/csapp-preface/</link><pubDate>Wed, 21 Sep 2022 22:41:47 +0800</pubDate><author>Vincent</author><guid>https://vincent--li.github.io/2022/9/21/csapp-preface/</guid><description>A Tour of Computer Systems C1: A Tour of Computer Systems
Part I: Program Structure and Execution C2: Representing and Manipulating Information
C3: Machine-Level Representation of Programs
C4: Processor Architecture
C5: Optimizing Program Performance
C6: The Memory Hierarchy
Part II: Running Prgrams on a System C7: Linking
C8: Exceptional Control Flow
C9: Virtual Memory
Part III: Interaction and Communication between Programs C10: System-Level I/O
C11: Network Programming
C12: Concurrent Programming</description></item><item><title>Markdown复习</title><link>https://vincent--li.github.io/2022/9/17/markdown%E5%A4%8D%E4%B9%A0/</link><pubDate>Sat, 17 Sep 2022 21:49:25 +0800</pubDate><author>Vincent</author><guid>https://vincent--li.github.io/2022/9/17/markdown%E5%A4%8D%E4%B9%A0/</guid><description>基础语法 标题 Markdown支持6中级别的标题, 对应HTML标签h1-h6 1 2 3 4 5 6 # h1 ## h2 ### h3 #### h4 ##### h5 ###### h6 此外, markdown还支持简</description></item><item><title>Java Class文件结构</title><link>https://vincent--li.github.io/2019/8/1/java-class%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/</link><pubDate>Thu, 01 Aug 2019 00:59:28 +0000</pubDate><author>Vincent</author><guid>https://vincent--li.github.io/2019/8/1/java-class%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/</guid><description>语言无关性 文件结构 u1 = 1byte 类型 名称 数量 u4 magic 1 u2 minor_version 1 u2 major_version 1 u2 constant_pool_count 1 cp_info constant_pool constant_pool_count-1 u2 access_flags 1 u2 this_class 1 u2 super_class 1 u2 interfaces_count 1 u2 interfaces interfaces_count u2 fields_count 1 field_info fields fields_count u2 methods_count 1 method_info methods methods_count u2 attribute_count 1 attribute_info attributes attributes_count magic u4 0xCAFEEBABE constant_pool_count</description></item><item><title>JVM锁</title><link>https://vincent--li.github.io/2019/7/20/jvm%E9%94%81/</link><pubDate>Sat, 20 Jul 2019 21:26:30 +0000</pubDate><author>Vincent</author><guid>https://vincent--li.github.io/2019/7/20/jvm%E9%94%81/</guid><description>线程安全 多线程网站统计访问人数 使用锁, 维护计数器的串行访问与安全性 多线程方位ArrayList 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23</description></item><item><title>Java堆分析</title><link>https://vincent--li.github.io/2019/7/14/java%E5%A0%86%E5%88%86%E6%9E%90/</link><pubDate>Sun, 14 Jul 2019 22:25:46 +0000</pubDate><author>Vincent</author><guid>https://vincent--li.github.io/2019/7/14/java%E5%A0%86%E5%88%86%E6%9E%90/</guid><description>MAT使用基础 Memory Analyse Tool 浅堆(Shallow Heap) 一个对象结构所占用的内存大小 3个int类型以及一个引用类型合计占用3*4+4=16字节, 再加上对象</description></item><item><title>JVM性能监控工具</title><link>https://vincent--li.github.io/2019/7/13/jvm%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7%E5%B7%A5%E5%85%B7/</link><pubDate>Sat, 13 Jul 2019 20:59:16 +0000</pubDate><author>Vincent</author><guid>https://vincent--li.github.io/2019/7/13/jvm%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7%E5%B7%A5%E5%85%B7/</guid><description>系统性能监控 uptime 系统时间 运行时间 连接数: 每个终端算一个连接数 1/5/15分钟系统平均负载 top 第一行同uptime cpu内存 每个进程占CPU的情况</description></item><item><title>Java 类装载器</title><link>https://vincent--li.github.io/2019/7/9/java-%E7%B1%BB%E8%A3%85%E8%BD%BD%E5%99%A8/</link><pubDate>Tue, 09 Jul 2019 23:09:04 +0000</pubDate><author>Vincent</author><guid>https://vincent--li.github.io/2019/7/9/java-%E7%B1%BB%E8%A3%85%E8%BD%BD%E5%99%A8/</guid><description>class装载验证流程 加载 装载类的第一阶段 取得类的二进制流 转为方法区数据结构 在Java堆中生成对应的java.lang.Class对象 链接 验</description></item><item><title>Java GC参数</title><link>https://vincent--li.github.io/2019/7/9/java-gc%E5%8F%82%E6%95%B0/</link><pubDate>Tue, 09 Jul 2019 21:38:20 +0000</pubDate><author>Vincent</author><guid>https://vincent--li.github.io/2019/7/9/java-gc%E5%8F%82%E6%95%B0/</guid><description>堆回顾 串行收集器 最古老, 最稳定 效率高 可能会产生较长的停顿 -XX:+UseSerialGC 新生代,老年代使用串行回收 新生代复制算法 老年代标记-压缩 并行收集器 ParNew -XX:+UseParNewGC 新生代并行,</description></item></channel></rss>